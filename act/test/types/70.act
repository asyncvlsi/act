/* F-bounded polymorphism */
interface foo() { 
methods {
  function test (int x) : bool;
}
}

deftype mytype (int x) :> foo { }
{
   methods {
     function test (int<4> y) : bool 
     {
       chp {
           self := x > x ? true : false
       }
     }
  }
}

template<ptype(foo) t>
defproc test()
{
   t x;
   bool w;
   chp {
     w := x.test(3)
   }
}

test<@mytype> x;
