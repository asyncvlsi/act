deftype foo (int<32> b);
defproc test ();
function baz (foo f) : foo;

deftype foo (int<32> b)
{

/* instances */

/* connections */
}

defproc test ()
{

/* instances */
foo f;
foo x;

/* connections */
chp {
*[true -> x.b:=int(bool((f.b>>0x1)=0x0 ? int(int(f.b,1)=0x0) : 0x0) ? 0x0 : 0x1,32)]
}
}

function baz (foo f) : foo
{

/* instances */

/* connections */
chp {
self.b:=bool((f.b>>0x1)=0x0 ? int(int(f.b,1)=0x0) : 0x0) ? 0x0 : 0x1
}
}


/* instances */
test t;

/* connections */
